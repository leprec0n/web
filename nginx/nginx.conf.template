include    /usr/local/openresty/nginx/conf/mime.types;

server {
    listen 80;
    server_name leprecon;

    root /usr/local/openresty/nginx/html;
    index index.html;

    error_log logs/error.log warn;
    access_log logs/access.log combined;

    error_page 404 /errors/404.html;

    # location / {
    #     if ($arg_auth_token) { PARAMETER CHECK
    #         return 502;
    #     }
    # }

    location /home {
        proxy_pass ${DEFAULT_HOST}/;
    }

    location /loading {
        proxy_pass ${DEFAULT_HOST}/loading;
    }

    location /login {
        #auth_request /auth;
        #auth_request_set $auth_status $upstream_status;
        return ${AUTH_HOST}/authorize?response_type=code&client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL}&state=STATE; # !TODO Change state to a random combination per request.
    }

    location /token {
        content_by_lua_block {
            function remove_user_key()
                ngx.req.read_body()
                -- log the original body so we can compare to the new one later
                local data = ngx.req.get_body_data()
                ngx.log(ngx.STDERR, data)

                -- grab the POST parameters as a table
                local params = ngx.req.get_post_args()
                local newbody = "{"

                local k_test = "key"
                local v_test = "test"

                for k,v in pairs(params) do
                    newbody = newbody..'"'..k..'":"'..v..'",'
                    newbody = newbody..'"'..k_test..'":"'..v_test..'",'
                end
                --remove the last trailing comma before closing this off
                newbody = string.sub(newbody, 0, #newbody-1)
                newbody = newbody.."}"

                ngx.req.set_body_data(newbody)
                ngx.log(ngx.STDERR, newbody)
                ngx.log(ngx.STDERR, os.getenv("AUTH_HOST"))
                return
            end

            if ngx.req.get_method() == "POST" then
                remove_user_key()
            end
        }
    }

    location /manifest.json {
        expires 1d;
    }

    # Static content
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|mp3|ogg|ogv|webm|htc|woff2|woff)$ {
        expires 1y;
        access_log off;
    }

    ##
    # `gzip` Settings
    #
    gzip on;
    gzip_disable "msie6"; # Don't gzip for browser using internet explorer 6 or older.

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 1500;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
}